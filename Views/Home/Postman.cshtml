@{
    ViewData["Title"] = "Postman Page";
}

<article id="scannerContainer" class="flex-col">
    <section id="scannerButtons">
        <button id="openScannerButton">Open Scanner</button>
        <button id="closeScannerButton">Close Scanner</button>
    </section>

    <video id="barcodeScanner" playsinline style="width: 100%; max-width: 100%; height: auto;"></video>

    <section id="parcelStatus" class="flex-col">
        <label for="status">Set Parcel Status:</label>
        <select id="status">
            <option value="" disabled selected>Where is the package now?</option>
            <hr />
            <optgroup label="Before delivery">
                <option value="0">Received</option>
            </optgroup>
            <hr />
            <optgroup label="Under delivery">
                <option value="1">Out for Delivery</option>
            </optgroup>
            <hr />
            <optgroup label="After delivery">
                <option value="2">Delivered</option>
            </optgroup>
        </select>
        <button id="updateStatusBtn">Update Status</button>
    </section>
</article>

@section Styles {
    <link rel="stylesheet" type="text/css" href="./css/postman.css">
}

@section Scripts {
    <script>
        let videoElement;
        let barcodeResultElement;

        document.addEventListener("DOMContentLoaded", () => {
            document.querySelector("#search-bar>input[type=button]").remove();
            document.querySelector("header>ol").remove();
            document.querySelector("header>h1").textContent = "Postman Panel | MQTT Parcel Tracker";

            videoElement = document.getElementById('barcodeScanner');
            barcodeResultElement = document.getElementById('parcel-search-bar');

            document.getElementById('openScannerButton').addEventListener('click', openScanner);
            document.getElementById('closeScannerButton').addEventListener('click', closeScanner);
            document.getElementById('updateStatusBtn').addEventListener('click', updateState);
        });

        function openScanner() {
            if (!('BarcodeDetector' in window)) {
                alert('BarcodeDetector is not available');
                return;
            }

            // Clear the saved barcode result, when opening the scanner
            barcodeResultElement.value = '';

            navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' } })
                .then(stream => {
                    videoElement.srcObject = stream;
                    videoElement.onloadedmetadata = () => {
                        videoElement.play();
                        scanForBarcode();
                    };
                })
                .catch(err => console.error('getUserMedia error: ', err));
        }

        function closeScanner() {
            try {
                const stream = videoElement.srcObject;
                const tracks = stream.getTracks();

                tracks.forEach(track => track.stop());
                videoElement.srcObject = null;
            } catch (err) {
                console.log(err);
            }
        }

        function scanForBarcode() {
            const barcodeDetector = new BarcodeDetector();

            barcodeDetector.detect(videoElement)
                .then(barcodes => {
                    if (barcodes.length > 0) {
                        barcodeResultElement.value = barcodes[0].rawValue ?? '';
                        closeScanner();
                    } else {
                        requestAnimationFrame(scanForBarcode);
                    }
                })
                .catch(err => console.error('Barcode detection error: ', err));
        }

        async function updateState() {
            const state = document.getElementById('status').value;
            const parcelUri = document.getElementById('parcel-search-bar').value;

            if (parcelUri && state) {
                await fetch(`/Home/PublishPayload?topic=${parcelUri}&state=${state}`);
            }
        }
    </script>
}